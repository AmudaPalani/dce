<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="72fe80c7-eddf-4462-a9be-1bec709fd982" name="Default Changelist" comment="fix functional test">
      <change beforePath="$PROJECT_DIR$/.github/pull_request_template.md" beforeDir="false" afterPath="$PROJECT_DIR$/.github/pull_request_template.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CHANGELOG.md" beforeDir="false" afterPath="$PROJECT_DIR$/CHANGELOG.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/codebuild/reset/default-nuke-config-template.yml" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/codebuild/reset/default-nuke-config-template.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/codebuild/reset/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/codebuild/reset/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/codebuild/reset/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/codebuild/reset/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/codebuild/reset/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/codebuild/reset/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/create.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/create_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/create_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/delete.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/delete.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/delete_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/delete_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/get.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/get_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/get_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/list.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/list_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/list_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/accounts/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/accounts/redboxprincipal.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/fan_out_update_lease_status/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/fan_out_update_lease_status/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/fan_out_update_lease_status/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/fan_out_update_lease_status/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/lease_auth/create.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/lease_auth/create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/lease_auth/create_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/lease_auth/create_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/lease_auth/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/lease_auth/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/create.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/create_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/create_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/delete.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/delete.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/detete_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/detete_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/get.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/get_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/get_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/list.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/list_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/list_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/leases/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/leases/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/populate_reset_queue/README.md" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/populate_reset_queue/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/populate_reset_queue/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/populate_reset_queue/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/populate_reset_queue/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/process_reset_queue/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/process_reset_queue/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/publish_lease_events/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/publish_lease_events/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/publish_lease_events/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/publish_lease_events/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/update_lease_status/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/update_lease_status/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/update_lease_status/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/update_lease_status/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/update_lease_status/notification.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/update_lease_status/notification.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/update_lease_status/sns.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/update_lease_status/sns.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/update_lease_status/spend.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/update_lease_status/spend.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/update_redbox_principal_policy/main.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/update_redbox_principal_policy/main_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/usage/get.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/usage/get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/usage/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/usage/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/index.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/index.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docs/quickstart.md" beforeDir="false" afterPath="$PROJECT_DIR$/docs/quickstart.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/accounts_lambda.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/accounts_lambda.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/artifacts_bucket.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/artifacts_bucket.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/dynamodb.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/dynamodb.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/dynamodb_DEPRECTATED.tf" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/email_identity.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/email_identity.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/fixtures/policies/redbox_principal_policy.tmpl" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/lambda/iam.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/lambda/iam.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/lambda/lambda.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/lambda/lambda.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/lambda/outputs.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/lambda/outputs.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/outputs.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/outputs.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/reset.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/reset.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/reset_codebuild.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/reset_codebuild.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/swagger.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/modules/swagger.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/update_redbox_policy_lambda.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/update_redbox_policy_lambda.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/modules/variables.tf" beforeDir="false" afterPath="$PROJECT_DIR$/modules/variables.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pipelines/test-and-create-pr-env.yml" beforeDir="false" afterPath="$PROJECT_DIR$/pipelines/test-and-create-pr-env.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/api/controller.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/api/controller.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/api/controller_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/api/controller_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/api/mocks/UserDetailer.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/api/mocks/UserDetailer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/api/response/account.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/api/response/account.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/api/response/lease.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/api/response/lease.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/api/response/usage.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/api/response/usage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/api/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/api/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/api/user_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/api/user_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/budget/budget.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/budget/budget.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/budget/budget_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/budget/budget_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/budget/mocks/Service.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/budget/mocks/Service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/common/builder_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/common/builder_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/common/mocks/TokenService.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/common/mocks/TokenService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/common/mocks/TokenServiceExt.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/common/mocks/TokenServiceExt.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/common/token.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/common/token.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/db/db.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/db/db.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/db/mocks/DBer.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/db/mocks/DBer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/db/model.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/db/model.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/email/email.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/email/email.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/email/mocks/Service.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/email/mocks/Service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/processresetqueue/reset.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/processresetqueue/reset.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/processresetqueue/reset_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/processresetqueue/reset_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provision/mocks/Provisioner.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provision/mocks/Provisioner.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provision/provisioner.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provision/provisioner.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/provision/provisioner_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/provision/provisioner_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/reset/nuke.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/reset/nuke.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/reset/nuke_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/reset/nuke_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/rolemanager/mocks/PolicyManager.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/rolemanager/mocks/PolicyManager.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/rolemanager/mocks/RoleManager.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/rolemanager/mocks/RoleManager.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/rolemanager/policymanager.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/rolemanager/policymanager.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/rolemanager/policymanager_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/rolemanager/policymanager_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/rolemanager/rolemanager.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/rolemanager/rolemanager.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/rolemanager/rolemanager_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/rolemanager/rolemanager_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/terraform/terraform.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/terraform/terraform.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/usage/mocks/Service.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/usage/mocks/Service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/usage/usage.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/usage/usage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/deploy.sh" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/deploy.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/deploy_local/deploy_local_build.sh" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/deploy_local/deploy_local_build.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/deploy_local/destroy_local_build.sh" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/deploy_local/destroy_local_build.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/deploy_local/main.tf" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/deploy_local/main.tf" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.10.0_db_rename_assignment_to_lease/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.10.0_db_rename_assignment_to_lease/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.10.0_db_rename_assignment_to_lease/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.10.0_db_rename_assignment_to_lease/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.11.0_db_add_leaseStatusModifiedOn_field/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.11.0_db_add_leaseStatusModifiedOn_field/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.11.0_db_add_leaseStatusModifiedOn_field/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.11.0_db_add_leaseStatusModifiedOn_field/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.19.0_db_expiring_leases/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.19.0_db_expiring_leases/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.19.2_fix_expired_leases/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.19.2_fix_expired_leases/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.21.0_rename_db_tables_dce/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.21.0_rename_db_tables_dce/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.21.0_rename_db_tables_dce/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.21.0_rename_db_tables_dce/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/scripts/migrations/v0.7.0_remove_group_id/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/migrations/v0.7.0_remove_group_id/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/acceptance/api_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/acceptance/api_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/acceptance/db_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/acceptance/db_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/acceptance/outputs_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/acceptance/outputs_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/acceptance/provisioner_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/acceptance/provisioner_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/acceptance/s3_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/acceptance/s3_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/acceptance/usage_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/tests/acceptance/usage_test.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/cmd/lambda/update_principal_policy/main.go">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/cmd/lambda/update_principal_policy/main_test.go">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-1088" />
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>budget</find>
      <find>hosted</find>
      <find>StatusBadRequest</find>
      <find>POST</find>
      <find>Failed to Parse Request Body</find>
      <find>PutUsage</find>
      <find>TestUser1</find>
      <find>apiURL</find>
      <find>truncate</find>
      <find>truncateAccount</find>
      <find>data[0]</find>
      <find>retry</find>
      <find>[0]</find>
      <find>mock</find>
      <find>= [&quot;</find>
      <find>leaseRequest2</find>
      <find>currency</find>
      <find>requestUrl</find>
      <find>update_lease_status</find>
      <find>Failed to lookup account for lease</find>
      <find>namespace</find>
      <find>TestAcct1</find>
      <find>Requested lease has a budget amount of 30000</find>
      <find>createUsage</find>
      <find>No Available Redbox Accounts</find>
      <find>USAGE_CACHE_DB</find>
      <find>truncateUsageTable(t, usageSvc)</find>
      <find>their weekly principal budget</find>
      <find>${NS</find>
      <find>&gt;&gt;</find>
    </findStrings>
    <dirStrings>
      <dir>$PROJECT_DIR$/.idea</dir>
      <dir>$PROJECT_DIR$</dir>
      <dir>$PROJECT_DIR$/tests/acceptance</dir>
    </dirStrings>
  </component>
  <component name="GOROOT" path="/usr/local/Cellar/go/1.12/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="feature/budgetfix2" />
      </map>
    </option>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/../src/github.com/Optum/Redbox/pkg/common/util.go" />
        <option value="$PROJECT_DIR$/cmd/lambda/leases/main.go" />
        <option value="$PROJECT_DIR$/cmd/lambda/leases/create_test.go" />
        <option value="$PROJECT_DIR$/pkg/common/util.go" />
        <option value="$PROJECT_DIR$/modules/update_lease_status.tf" />
        <option value="$PROJECT_DIR$/cmd/lambda/update_lease_status/main_test.go" />
        <option value="$PROJECT_DIR$/pipelines/test-and-create-pr-env.yml" />
        <option value="$PROJECT_DIR$/tests/acceptance/db_test.go" />
        <option value="$PROJECT_DIR$/tests/acceptance/usage_test.go" />
        <option value="$PROJECT_DIR$/modules/variables.tf" />
        <option value="$PROJECT_DIR$/cmd/lambda/update_lease_status/spend.go" />
        <option value="$PROJECT_DIR$/cmd/lambda/update_lease_status/main.go" />
        <option value="$PROJECT_DIR$/tests/acceptance/testlambda/update_lease_status_test.go" />
        <option value="$PROJECT_DIR$/modules/backend.tf" />
        <option value="$PROJECT_DIR$/modules/leases_lambda.tf" />
        <option value="$PROJECT_DIR$/cmd/lambda/leases/create.go" />
        <option value="$PROJECT_DIR$/pkg/usage/usage.go" />
        <option value="$PROJECT_DIR$/tests/acceptance/api_test.go" />
        <option value="$PROJECT_DIR$/CHANGELOG.md" />
      </list>
    </option>
  </component>
  <component name="ProjectConfigurationFiles">
    <option name="files">
      <list>
        <option value="$PROJECT_DIR$/.idea/Redbox.iml" />
        <option value="$PROJECT_DIR$/.idea/vcs.xml" />
        <option value="$PROJECT_DIR$/.idea/misc.xml" />
        <option value="$PROJECT_DIR$/.idea/modules.xml" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" fullScreen="true">
    <option name="width" value="1680" />
    <option name="height" value="1050" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="cmd" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="cmd" type="462c0819:PsiDirectoryNode" />
              <item name="lambda" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="cmd" type="462c0819:PsiDirectoryNode" />
              <item name="lambda" type="462c0819:PsiDirectoryNode" />
              <item name="leases" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="cmd" type="462c0819:PsiDirectoryNode" />
              <item name="lambda" type="462c0819:PsiDirectoryNode" />
              <item name="update_lease_status" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="cmd" type="462c0819:PsiDirectoryNode" />
              <item name="lambda" type="462c0819:PsiDirectoryNode" />
              <item name="usage" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="modules" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="pipelines" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="pkg" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="pkg" type="462c0819:PsiDirectoryNode" />
              <item name="usage" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="scripts" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="tests" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="tests" type="462c0819:PsiDirectoryNode" />
              <item name="acceptance" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Redbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Redbox" type="462c0819:PsiDirectoryNode" />
              <item name="tests" type="462c0819:PsiDirectoryNode" />
              <item name="acceptance" type="462c0819:PsiDirectoryNode" />
              <item name="testutil" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="GO_FMT" value="true" />
    <property name="Git.Branch.Popup.ShowAllRemotes" value="true" />
    <property name="TF_FMT" value="false" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.create_test.go">
    <configuration name="TestCreateController_Call in create_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Redbox" />
      <working_directory value="$PROJECT_DIR$/cmd/lambda/leases" />
      <framework value="gotest" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/cmd/lambda/leases/create_test.go" />
      <pattern value="^TestCreateController_Call$" />
      <method v="2" />
    </configuration>
    <configuration name="create_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Redbox" />
      <working_directory value="$PROJECT_DIR$/cmd/lambda/leases" />
      <framework value="gotest" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/cmd/lambda/leases/create_test.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestCreateController_Call in create_test.go" />
        <item itemvalue="Go Test.create_test.go" />
        <item itemvalue="Go Test.TestCreateController_Call in create_test.go" />
        <item itemvalue="Go Test.create_test.go" />
        <item itemvalue="Go Test.TestCreateController_Call in create_test.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1680" height="1050" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.31173593" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" weight="0.32967836" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32894737" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.3998538" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Docker" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Database Changes" order="8" />
      <window_info active="true" anchor="bottom" id="Version Control" order="9" visible="true" weight="0.26891616" />
      <window_info anchor="bottom" id="Terminal" order="10" weight="0.32924336" />
      <window_info anchor="bottom" id="Event Log" order="11" side_tool="true" />
      <window_info anchor="bottom" id="Messages" order="12" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Database" order="3" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="temp change" />
    <MESSAGE value="add env variable USAGE_CACHE_DB" />
    <MESSAGE value="undo changes" />
    <MESSAGE value="budget_check against Principal budget amount" />
    <MESSAGE value="changelog" />
    <MESSAGE value="fix unit test" />
    <MESSAGE value="fix functional tests" />
    <MESSAGE value="add functional tests" />
    <MESSAGE value="update functional tests" />
    <MESSAGE value="undo pipeline changes" />
    <MESSAGE value="fix bug" />
    <MESSAGE value="fix truncateUsageTable bug" />
    <MESSAGE value="PR review fixed" />
    <MESSAGE value="lint error fixed" />
    <MESSAGE value="Initial test for running lambda" />
    <MESSAGE value="fix functional tests errors" />
    <MESSAGE value="fix import" />
    <MESSAGE value="calculatePrincipalSpend added" />
    <MESSAGE value="bug fix" />
    <MESSAGE value="create usage records in the beginning of tests" />
    <MESSAGE value="debugging" />
    <MESSAGE value="bug fix leases lambda point to correct usage db" />
    <MESSAGE value="merge" />
    <MESSAGE value="debugging print removed" />
    <MESSAGE value="fix functional test" />
    <option name="LAST_COMMIT_MESSAGE" value="fix functional test" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/cmd/lambda/leases/create.go</url>
          <line>233</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/cmd/lambda/leases/create_test.go</url>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/cmd/lambda/leases/create_test.go</url>
          <line>128</line>
          <option name="timeStamp" value="3" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tests/acceptance/api_test.go</url>
          <line>935</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tests/acceptance/api_test.go</url>
          <line>326</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tests/acceptance/api_test.go</url>
          <line>1211</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tests/acceptance/db_test.go</url>
          <line>853</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/cmd/lambda/leases/create.go</url>
          <line>125</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/pkg/api/controller.go">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/pkg/api/controller_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="481">
          <caret line="84" column="51" selection-start-line="84" selection-start-column="33" selection-end-line="84" selection-end-column="51" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/leases/get_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-135">
          <folding>
            <element signature="e#14#282#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/leases/detete_test.go">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/populate_reset_queue/main_test.go">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/process_reset_queue/main.go">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/publish_lease_events/main_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2030" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/publish_lease_events/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="749">
          <caret line="79" column="42" selection-start-line="79" selection-start-column="25" selection-end-line="79" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/accounts/create_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="6117">
          <caret line="501" column="64" lean-forward="true" selection-start-line="501" selection-end-line="502" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pkg/common/builder_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="225">
          <caret line="24" column="16" selection-start-line="24" selection-start-column="16" selection-end-line="24" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.12/libexec/src/reflect/deepequal.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="390">
          <caret line="186" column="5" selection-start-line="186" selection-start-column="5" selection-end-line="186" selection-end-column="5" />
          <folding>
            <element signature="e#788#3356#0" />
            <element signature="e#3358#3436#0" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/leases/create_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="285">
          <caret line="124" column="96" selection-start-line="124" selection-start-column="96" selection-end-line="124" selection-end-column="96" />
          <folding>
            <element signature="e#14#576#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/dist/swagger-ui-standalone-preset.js.map">
      <provider editor-type-id="sourcemapFileViewerProvider" />
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="199">
          <caret column="699280" selection-start-column="699280" selection-end-column="699280" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/scripts/deploy.sh">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/scripts/restore_db.sh">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1444" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/leases/get.go">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/update_lease_status/notification.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-230" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/vcs.xml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/Redbox.iml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/modules.xml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/misc.xml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/pkg/common/util.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="363">
          <caret line="51" selection-start-line="51" selection-end-line="51" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/modules/update_lease_status.tf">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="445">
          <caret line="46" column="75" selection-start-line="46" selection-start-column="75" selection-end-line="46" selection-end-column="75" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/update_lease_status/main_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="95">
          <caret line="326" selection-start-line="326" selection-end-line="326" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/github.com/stretchr/testify/require/require.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="555">
          <caret line="42" column="5" selection-start-line="42" selection-start-column="5" selection-end-line="42" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pipelines/destroy-pr-env.yml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-262" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/tests/acceptance/testutil/retry.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-637" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/tests/acceptance/usage_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="579">
          <caret line="172" column="4" lean-forward="true" selection-start-line="172" selection-start-column="4" selection-end-line="172" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.12/libexec/src/math/floor.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="230">
          <caret line="63" column="5" selection-start-line="63" selection-start-column="5" selection-end-line="63" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/modules/variables.tf">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2325">
          <caret line="155" column="19" selection-start-line="155" selection-start-column="10" selection-end-line="155" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/tests/acceptance/db_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="180">
          <caret line="12" selection-start-line="12" selection-end-line="12" selection-end-column="57" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/tests/acceptance/testlambda/update_lease_status_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="400">
          <caret line="79" column="60" selection-start-line="79" selection-start-column="60" selection-end-line="79" selection-end-column="60" />
          <folding>
            <element signature="e#20#278#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/update_lease_status/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="373">
          <caret line="135" column="60" selection-start-line="135" selection-start-column="60" selection-end-line="135" selection-end-column="60" />
          <folding>
            <element signature="e#14#607#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file:///usr/local/Cellar/go/1.12/libexec/src/time/time.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="360">
          <caret line="1309" column="5" selection-start-line="1309" selection-start-column="5" selection-end-line="1309" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/usage/get.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="252">
          <caret line="32" column="26" selection-start-line="32" selection-start-column="22" selection-end-line="32" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/tests/acceptance/s3_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="23" column="9" selection-start-line="23" selection-start-column="4" selection-end-line="23" selection-end-column="9" />
          <folding>
            <element signature="e#15#368#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/update_lease_status/spend.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="251">
          <caret line="40" column="114" selection-start-line="40" selection-start-column="114" selection-end-line="40" selection-end-column="114" />
          <folding>
            <element signature="e#14#302#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/scripts/test_functional.sh">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="90">
          <caret line="6" selection-start-line="6" selection-end-line="6" selection-end-column="82" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/github.com/Optum/Redbox/pkg/usage/usage.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="352">
          <caret line="66" column="14" selection-start-line="66" selection-start-column="14" selection-end-line="66" selection-end-column="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/modules/usage_lambda.tf">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="195">
          <caret line="13" column="18" selection-start-line="13" selection-start-column="4" selection-end-line="13" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/modules/leases_lambda.tf">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="660">
          <caret line="44" column="43" lean-forward="true" selection-start-line="44" selection-start-column="43" selection-end-line="44" selection-end-column="43" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/leases/create.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="534">
          <caret line="123" selection-start-line="123" selection-end-line="123" />
          <folding>
            <element signature="n#!!block;n#publishLease#0" />
            <element signature="n#!!block;n#rollbackProvision#0" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pkg/usage/usage.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="152">
          <caret line="70" column="50" selection-start-line="70" selection-start-column="50" selection-end-line="70" selection-end-column="50" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/usage/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="840">
          <caret line="56" column="18" selection-start-line="54" selection-end-line="58" selection-end-column="5" />
          <folding>
            <element signature="e#14#267#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/tests/acceptance/api_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="208">
          <caret line="1349" column="95" selection-start-line="1349" selection-start-column="95" selection-end-line="1349" selection-end-column="95" />
          <folding>
            <element signature="n#!!block;n#createAdminRole#0" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/modules/backend.tf">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="45">
          <caret line="3" column="3" selection-start-line="3" selection-start-column="3" selection-end-line="3" selection-end-column="3" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pipelines/test-and-create-pr-env.yml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1575">
          <caret line="105" column="26" lean-forward="true" selection-start-line="105" selection-start-column="26" selection-end-line="105" selection-end-column="26" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CHANGELOG.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="SPLIT">
          <first_editor relative-caret-position="30">
            <caret line="2" column="129" selection-start-line="2" selection-start-column="129" selection-end-line="2" selection-end-column="129" />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/leases/main.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="120">
          <caret line="11" column="18" lean-forward="true" selection-start-line="11" selection-start-column="5" selection-end-line="11" selection-end-column="35" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/update_principal_policy/main.go">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/cmd/lambda/update_principal_policy/main_test.go">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-1088" />
      </provider>
    </entry>
  </component>
</project>